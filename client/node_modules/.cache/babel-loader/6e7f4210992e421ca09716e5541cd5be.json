{"ast":null,"code":"import { GET_TOP_SALES, GET_CATALOG_PRODUCTS, ADD_INPUT, SET_LOADING, DELETE_INPUT, SET_CURRENT, EDIT_INPUT, INPUTS_ERROR, GET_CATEGORIES } from \"../actions/types\";\nconst intialState = {\n  products: null,\n  loading: false,\n  error: null,\n  categories: null\n};\nexport default ((state = intialState, action) => {\n  switch (action.type) {\n    case GET_TOP_SALES:\n      return { ...state,\n        products: action.payload,\n        loading: false\n      };\n\n    case GET_CATEGORIES:\n      return { ...state,\n        categories: action.payload,\n        loading: false\n      };\n\n    case SET_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    case ADD_INPUT:\n      return { ...state,\n        list: [...state.list, {\n          name: action.name,\n          content: action.content,\n          price: action.price\n        }],\n        loading: false\n      };\n\n    case DELETE_INPUT:\n      return { ...state,\n        list: [...state.list.filter(input => input.id !== action.payload)],\n        loading: false\n      };\n\n    case EDIT_INPUT:\n      return { ...state,\n        list: [...state.list.filter(input => input.id !== action.payload.id), {\n          id: action.payload.id,\n          name: action.payload.name,\n          contenе: action.payload.content,\n          price: action.payload.price\n        }],\n        editMode: false,\n        editItem: {},\n        loading: false\n      };\n\n    case SET_CURRENT:\n      return { ...state,\n        editMode: true,\n        editItem: action.payload,\n        loading: false\n      };\n\n    case INPUTS_ERROR:\n      console.error(`popa ${action.payload}`);\n      return { ...state,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/blokhinsergey/Desktop/StudyIt/React/netology/e-store/client/src/reducers/inputReducer.js"],"names":["GET_TOP_SALES","GET_CATALOG_PRODUCTS","ADD_INPUT","SET_LOADING","DELETE_INPUT","SET_CURRENT","EDIT_INPUT","INPUTS_ERROR","GET_CATEGORIES","intialState","products","loading","error","categories","state","action","type","payload","list","name","content","price","filter","input","id","contenе","editMode","editItem","console"],"mappings":"AAAA,SACEA,aADF,EAEEC,oBAFF,EAGEC,SAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,WANF,EAOEC,UAPF,EAQEC,YARF,EASEC,cATF,QAUO,kBAVP;AAYA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,IADQ;AAElBC,EAAAA,OAAO,EAAE,KAFS;AAGlBC,EAAAA,KAAK,EAAE,IAHW;AAIlBC,EAAAA,UAAU,EAAE;AAJM,CAApB;AAOA,gBAAe,CAACC,KAAK,GAAGL,WAAT,EAAsBM,MAAtB,KAAiC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,aAAL;AACE,aAAO,EACL,GAAGc,KADE;AAELJ,QAAAA,QAAQ,EAAEK,MAAM,CAACE,OAFZ;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKH,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELD,QAAAA,UAAU,EAAEE,MAAM,CAACE,OAFd;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKR,WAAL;AACE,aAAO,EAAC,GAAGW,KAAJ;AAAWH,QAAAA,OAAO,EAAE;AAApB,OAAP;;AAEF,SAAKT,SAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELI,QAAAA,IAAI,EAAE,CACJ,GAAGJ,KAAK,CAACI,IADL,EAEJ;AACEC,UAAAA,IAAI,EAAEJ,MAAM,CAACI,IADf;AAEEC,UAAAA,OAAO,EAAEL,MAAM,CAACK,OAFlB;AAGEC,UAAAA,KAAK,EAAEN,MAAM,CAACM;AAHhB,SAFI,CAFD;AAULV,QAAAA,OAAO,EAAE;AAVJ,OAAP;;AAaF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELI,QAAAA,IAAI,EAAE,CAAC,GAAGJ,KAAK,CAACI,IAAN,CAAWI,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaT,MAAM,CAACE,OAAjD,CAAJ,CAFD;AAGLN,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAMF,SAAKL,UAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELI,QAAAA,IAAI,EAAE,CACJ,GAAGJ,KAAK,CAACI,IAAN,CAAWI,MAAX,CAAmBC,KAAD,IAAWA,KAAK,CAACC,EAAN,KAAaT,MAAM,CAACE,OAAP,CAAeO,EAAzD,CADC,EAEJ;AACEA,UAAAA,EAAE,EAAET,MAAM,CAACE,OAAP,CAAeO,EADrB;AAEEL,UAAAA,IAAI,EAAEJ,MAAM,CAACE,OAAP,CAAeE,IAFvB;AAGEM,UAAAA,OAAO,EAAEV,MAAM,CAACE,OAAP,CAAeG,OAH1B;AAIEC,UAAAA,KAAK,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAJxB,SAFI,CAFD;AAWLK,QAAAA,QAAQ,EAAE,KAXL;AAYLC,QAAAA,QAAQ,EAAE,EAZL;AAaLhB,QAAAA,OAAO,EAAE;AAbJ,OAAP;;AAgBF,SAAKN,WAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELY,QAAAA,QAAQ,EAAE,IAFL;AAGLC,QAAAA,QAAQ,EAAEZ,MAAM,CAACE,OAHZ;AAILN,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAOF,SAAKJ,YAAL;AACEqB,MAAAA,OAAO,CAAChB,KAAR,CAAe,QAAOG,MAAM,CAACE,OAAQ,EAArC;AACA,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFT,OAAP;;AAKF;AACE,aAAOH,KAAP;AAvEJ;AAyED,CA1ED","sourcesContent":["import {\n  GET_TOP_SALES,\n  GET_CATALOG_PRODUCTS,\n  ADD_INPUT,\n  SET_LOADING,\n  DELETE_INPUT,\n  SET_CURRENT,\n  EDIT_INPUT,\n  INPUTS_ERROR,\n  GET_CATEGORIES,\n} from \"../actions/types\";\n\nconst intialState = {\n  products: null,\n  loading: false,\n  error: null,\n  categories: null,\n};\n\nexport default (state = intialState, action) => {\n  switch (action.type) {\n    case GET_TOP_SALES:\n      return {\n        ...state,\n        products: action.payload,\n        loading: false,\n      };\n    case GET_CATEGORIES:\n      return {\n        ...state,\n        categories: action.payload,\n        loading: false,\n      };\n\n    case SET_LOADING:\n      return {...state, loading: true};\n\n    case ADD_INPUT:\n      return {\n        ...state,\n        list: [\n          ...state.list,\n          {\n            name: action.name,\n            content: action.content,\n            price: action.price,\n          },\n        ],\n        loading: false,\n      };\n\n    case DELETE_INPUT:\n      return {\n        ...state,\n        list: [...state.list.filter((input) => input.id !== action.payload)],\n        loading: false,\n      };\n\n    case EDIT_INPUT:\n      return {\n        ...state,\n        list: [\n          ...state.list.filter((input) => input.id !== action.payload.id),\n          {\n            id: action.payload.id,\n            name: action.payload.name,\n            contenе: action.payload.content,\n            price: action.payload.price,\n          },\n        ],\n        editMode: false,\n        editItem: {},\n        loading: false,\n      };\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        editMode: true,\n        editItem: action.payload,\n        loading: false,\n      };\n\n    case INPUTS_ERROR:\n      console.error(`popa ${action.payload}`);\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}